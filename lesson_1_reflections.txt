How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Faster finding difference than eye ball.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Easier and faster to find difference when modifying codes. It let me trace back in time for versions that still work.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros: Save memory. Only commit and I think I make significant changes.
Cons: Autosave in case I forget to save and commit myself and somehow screw up the current version. It serves as backup plan.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Coders often deal with multiple files for the same project. It makes more sense to save all files in the same project at specific time rather than save one at a time, which might miss some files unsaved.

How can you use the commands git log and git diff to view the history of files?

Use git log to find the history of files and git diff file_1 file_2 to find the difference


How might using version control make you more confident to make changes that
could break something?

If I break something I still have the older version which works and allow me to roll back.

Now that you have your workspace set up, what do you want to try using Git for?

For my nanodegree projects. I used to just upload the whole finished files to Github so there were no commit history. Now I need to change that!



